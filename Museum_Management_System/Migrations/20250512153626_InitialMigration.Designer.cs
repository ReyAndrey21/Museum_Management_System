// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Museum_Management_System.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Museum_Management_System.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250512153626_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Museum_Management_System.Models.Discount", b =>
                {
                    b.Property<int>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_discount");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDiscount"));

                    b.Property<string>("BeneficiaryCategory")
                        .HasColumnType("text")
                        .HasColumnName("beneficiary_category");

                    b.Property<double>("PercentageDiscount")
                        .HasColumnType("double precision")
                        .HasColumnName("percentage_discout");

                    b.HasKey("IdDiscount");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_employee");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hire_date");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<double>("Salary")
                        .HasColumnType("double precision")
                        .HasColumnName("salary");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Exhibit", b =>
                {
                    b.Property<int>("IdExhibit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_exhibit");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdExhibit"));

                    b.Property<string>("CategoryExhibit")
                        .HasColumnType("text")
                        .HasColumnName("category_exhibit");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description_exhibit");

                    b.Property<string>("HistoricalPeriod")
                        .HasColumnType("text")
                        .HasColumnName("historical_period");

                    b.Property<int?>("IdSection")
                        .HasColumnType("integer")
                        .HasColumnName("id_section");

                    b.Property<string>("ImageExhibit")
                        .HasColumnType("text")
                        .HasColumnName("image_exhibit");

                    b.Property<string>("NameExhibit")
                        .HasColumnType("text")
                        .HasColumnName("name_exhibit");

                    b.HasKey("IdExhibit");

                    b.HasIndex("IdSection");

                    b.ToTable("Exhibits");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Faq", b =>
                {
                    b.Property<int>("IdFAQ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_faq");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFAQ"));

                    b.Property<string>("Answer")
                        .HasColumnType("text")
                        .HasColumnName("answer");

                    b.Property<string>("Question")
                        .HasColumnType("text")
                        .HasColumnName("question");

                    b.HasKey("IdFAQ");

                    b.ToTable("FAQ");
                });

            modelBuilder.Entity("Museum_Management_System.Models.MuseumSchedule", b =>
                {
                    b.Property<int>("IdMuseumSchedule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_museum_schedule");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMuseumSchedule"));

                    b.Property<TimeOnly>("ClosingHour")
                        .HasColumnType("time without time zone")
                        .HasColumnName("closing_hour");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("text")
                        .HasColumnName("day_of_week");

                    b.Property<TimeOnly>("OpeningHour")
                        .HasColumnType("time without time zone")
                        .HasColumnName("opening_hour");

                    b.HasKey("IdMuseumSchedule");

                    b.ToTable("MuseumSchedules");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Review", b =>
                {
                    b.Property<int>("IdReview")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_review");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReview"));

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateOnly>("DateReview")
                        .HasColumnType("date")
                        .HasColumnName("date_review");

                    b.Property<int?>("IdExhibit")
                        .HasColumnType("integer")
                        .HasColumnName("id_exhibit");

                    b.Property<int?>("IdTour")
                        .HasColumnType("integer")
                        .HasColumnName("id_tour");

                    b.Property<int>("IdUsers")
                        .HasColumnType("integer")
                        .HasColumnName("id_users");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.HasKey("IdReview");

                    b.HasIndex("IdExhibit");

                    b.HasIndex("IdTour");

                    b.HasIndex("IdUsers");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Section", b =>
                {
                    b.Property<int>("IdSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_section");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSection"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description_section");

                    b.Property<string>("ImageSection")
                        .HasColumnType("text")
                        .HasColumnName("image_section");

                    b.Property<string>("NameSection")
                        .HasColumnType("text")
                        .HasColumnName("name_section");

                    b.HasKey("IdSection");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Ticket", b =>
                {
                    b.Property<int>("IdTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_ticket");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTicket"));

                    b.Property<double>("FinalPrice")
                        .HasColumnType("double precision")
                        .HasColumnName("final_price");

                    b.Property<int?>("IdDiscount")
                        .HasColumnType("integer")
                        .HasColumnName("id_discount");

                    b.Property<int>("IdTicketType")
                        .HasColumnType("integer")
                        .HasColumnName("id_ticket_type");

                    b.Property<int>("IdUsers")
                        .HasColumnType("integer")
                        .HasColumnName("id_users");

                    b.Property<DateOnly>("PurchaseDate")
                        .HasColumnType("date")
                        .HasColumnName("purchase_date");

                    b.HasKey("IdTicket");

                    b.HasIndex("IdDiscount");

                    b.HasIndex("IdTicketType");

                    b.HasIndex("IdUsers");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Museum_Management_System.Models.TicketType", b =>
                {
                    b.Property<int>("IdTicketType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_ticket_type");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTicketType"));

                    b.Property<double>("BasePrice")
                        .HasColumnType("double precision")
                        .HasColumnName("base_price");

                    b.Property<string>("TypeName")
                        .HasColumnType("text")
                        .HasColumnName("type_name");

                    b.HasKey("IdTicketType");

                    b.ToTable("TicketTypes");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Tour", b =>
                {
                    b.Property<int>("IdTour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_tour");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTour"));

                    b.Property<int>("AvailableSpots")
                        .HasColumnType("integer")
                        .HasColumnName("available_spots");

                    b.Property<DateOnly>("DateTour")
                        .HasColumnType("date")
                        .HasColumnName("date_tour");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Duration")
                        .HasColumnType("integer")
                        .HasColumnName("duration");

                    b.Property<TimeOnly>("HourTour")
                        .HasColumnType("time without time zone")
                        .HasColumnName("hour_tour");

                    b.Property<int>("IdTourGuide")
                        .HasColumnType("integer")
                        .HasColumnName("id_tour_guide");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("IdTour");

                    b.HasIndex("IdTourGuide");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("Museum_Management_System.Models.TourBooking", b =>
                {
                    b.Property<int>("IdTourBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_tour_booking");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTourBooking"));

                    b.Property<int>("IdTour")
                        .HasColumnType("integer")
                        .HasColumnName("id_tour");

                    b.Property<int>("IdUsers")
                        .HasColumnType("integer")
                        .HasColumnName("id_users");

                    b.Property<int>("NumberTickets")
                        .HasColumnType("integer")
                        .HasColumnName("number_tickets");

                    b.HasKey("IdTourBooking");

                    b.HasIndex("IdTour");

                    b.HasIndex("IdUsers");

                    b.ToTable("TourBookings");
                });

            modelBuilder.Entity("Museum_Management_System.Models.TourGuide", b =>
                {
                    b.Property<int>("IdTourGuide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_tour_guide");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTourGuide"));

                    b.Property<string>("ForeignLanguages")
                        .HasColumnType("text")
                        .HasColumnName("foreign_languages");

                    b.Property<int>("IdUsers")
                        .HasColumnType("integer")
                        .HasColumnName("id_users");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("IdTourGuide");

                    b.HasIndex("IdUsers")
                        .IsUnique();

                    b.ToTable("TourGuides");
                });

            modelBuilder.Entity("Museum_Management_System.Models.TourGuideSchedule", b =>
                {
                    b.Property<int>("IdTourGuideSchedule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_tour_guide_schedule");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTourGuideSchedule"));

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("text")
                        .HasColumnName("day_of_week");

                    b.Property<TimeOnly>("EndHour")
                        .HasColumnType("time without time zone")
                        .HasColumnName("end_hour");

                    b.Property<int>("IdTourGuide")
                        .HasColumnType("integer")
                        .HasColumnName("id_tour_guide");

                    b.Property<TimeOnly>("StartHour")
                        .HasColumnType("time without time zone")
                        .HasColumnName("start_hour");

                    b.HasKey("IdTourGuideSchedule");

                    b.HasIndex("IdTourGuide");

                    b.ToTable("TourGuideSchedules");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Users", b =>
                {
                    b.Property<int>("IdUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_users");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsers"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("text")
                        .HasColumnName("profile_picture");

                    b.Property<string>("Role")
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("IdUsers");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Exhibit", b =>
                {
                    b.HasOne("Museum_Management_System.Models.Section", "Section")
                        .WithMany("Exhibits")
                        .HasForeignKey("IdSection");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Review", b =>
                {
                    b.HasOne("Museum_Management_System.Models.Exhibit", "Exhibit")
                        .WithMany("Reviews")
                        .HasForeignKey("IdExhibit");

                    b.HasOne("Museum_Management_System.Models.Tour", "Tour")
                        .WithMany("Reviews")
                        .HasForeignKey("IdTour");

                    b.HasOne("Museum_Management_System.Models.Users", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("IdUsers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exhibit");

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Ticket", b =>
                {
                    b.HasOne("Museum_Management_System.Models.Discount", "Discount")
                        .WithMany("Tickets")
                        .HasForeignKey("IdDiscount");

                    b.HasOne("Museum_Management_System.Models.TicketType", "TicketType")
                        .WithMany("Tickets")
                        .HasForeignKey("IdTicketType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Museum_Management_System.Models.Users", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("IdUsers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("TicketType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Tour", b =>
                {
                    b.HasOne("Museum_Management_System.Models.TourGuide", "TourGuide")
                        .WithMany("Tours")
                        .HasForeignKey("IdTourGuide")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourGuide");
                });

            modelBuilder.Entity("Museum_Management_System.Models.TourBooking", b =>
                {
                    b.HasOne("Museum_Management_System.Models.Tour", "Tour")
                        .WithMany("TourBookings")
                        .HasForeignKey("IdTour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Museum_Management_System.Models.Users", "User")
                        .WithMany("TourBookings")
                        .HasForeignKey("IdUsers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Museum_Management_System.Models.TourGuide", b =>
                {
                    b.HasOne("Museum_Management_System.Models.Users", "User")
                        .WithOne("TourGuides")
                        .HasForeignKey("Museum_Management_System.Models.TourGuide", "IdUsers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Museum_Management_System.Models.TourGuideSchedule", b =>
                {
                    b.HasOne("Museum_Management_System.Models.TourGuide", "TourGuide")
                        .WithMany("Schedules")
                        .HasForeignKey("IdTourGuide")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourGuide");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Discount", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Exhibit", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Section", b =>
                {
                    b.Navigation("Exhibits");
                });

            modelBuilder.Entity("Museum_Management_System.Models.TicketType", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Tour", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("TourBookings");
                });

            modelBuilder.Entity("Museum_Management_System.Models.TourGuide", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("Museum_Management_System.Models.Users", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Tickets");

                    b.Navigation("TourBookings");

                    b.Navigation("TourGuides");
                });
#pragma warning restore 612, 618
        }
    }
}
